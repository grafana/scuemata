# schema is an embedded struct, where struct is a def outside the schema
-- in.cue --
import "github.com/grafana/thema"

thema.#Lineage
name: "embedexref"
schemas: [{
	version: [0, 0]
	schema: {
        #EmbedRef
	}
}]
lenses: []

#EmbedRef: {
    refField1: string
    refField2: 42
}
-- out/bind --
Schema count: 1
Schema versions: 0.0
Lenses count: 0
-- out/encoding/openapi/TestGenerate/nilcfg --
== 0.0.json
{
  "openapi": "3.0.0",
  "info": {
    "title": "embedexref",
    "version": "0.0"
  },
  "paths": {},
  "components": {
    "schemas": {
      "embedexref": {
        "type": "object",
        "required": [
          "refField1",
          "refField2"
        ],
        "properties": {
          "refField1": {
            "type": "string"
          },
          "refField2": {
            "type": "integer",
            "enum": [
              42
            ]
          }
        }
      }
    }
  }
}
-- out/encoding/openapi/TestGenerate/expandrefs --
== 0.0.json
{
  "openapi": "3.0.0",
  "info": {
    "title": "embedexref",
    "version": "0.0"
  },
  "paths": {},
  "components": {
    "schemas": {
      "embedexref": {
        "type": "object",
        "required": [
          "refField1",
          "refField2"
        ],
        "properties": {
          "refField1": {
            "type": "string"
          },
          "refField2": {
            "type": "integer",
            "enum": [
              42
            ]
          }
        }
      }
    }
  }
}
-- out/encoding/openapi/TestGenerate/group --
== 0.0.json
{
  "openapi": "3.0.0",
  "info": {
    "title": "embedexref",
    "version": "0.0"
  },
  "paths": {},
  "components": {
    "schemas": {
      "refField1": {
        "type": "string"
      },
      "refField2": {
        "type": "integer",
        "enum": [
          42
        ]
      }
    }
  }
}
-- out/encoding/gocode/TestGenerate/nilcfg --
== embedexref_type_0.0_gen.go
package embedexref

// Defines values for EmbedexrefRefField2.
const (
	EmbedexrefRefField2N42 EmbedexrefRefField2 = 42
)

// Embedexref defines model for embedexref.
type Embedexref struct {
	RefField1 string              `json:"refField1"`
	RefField2 EmbedexrefRefField2 `json:"refField2"`
}

// EmbedexrefRefField2 defines model for Embedexref.RefField2.
type EmbedexrefRefField2 int
-- out/encoding/gocode/TestGenerate/group --
== embedexref_type_0.0_gen.go
package embedexref

// Defines values for RefField2.
const (
	RefField2N42 RefField2 = 42
)

// RefField1 defines model for refField1.
type RefField1 = string

// RefField2 defines model for refField2.
type RefField2 int
-- out/encoding/gocode/TestGenerate/depointerized --
== embedexref_type_0.0_gen.go
package embedexref

// Defines values for EmbedexrefRefField2.
const (
	EmbedexrefRefField2N42 EmbedexrefRefField2 = 42
)

// Embedexref defines model for embedexref.
type Embedexref struct {
	RefField1 string              `json:"refField1"`
	RefField2 EmbedexrefRefField2 `json:"refField2"`
}

// EmbedexrefRefField2 defines model for Embedexref.RefField2.
type EmbedexrefRefField2 int
