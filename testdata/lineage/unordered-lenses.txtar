# lineage loading should error because lenses are not ordered by version
#expectedErrorMessage: lenses are out of order: lens with version [to: 1.0, from: 0.3] must go after [to: 1.0, from: 1.1]
-- in.cue --
import "github.com/grafana/thema"

thema.#Lineage
name: "unordered-lenses"

schemas: [{
    version: [0, 0]
    schema: {
        init: string
    }
},
{
    version: [0, 1]
    schema: {
        init:      string
        optional?: int32
    }
},
{
    version: [0, 2]
    schema: {
        init:        string
        optional?:   int32
        withDefault?: *"foo" | "bar"
    }
},
{
    version: [0, 3]
    schema: {
        init:        string
        optional?:   int32
        withDefault?: *"foo" | "bar" | "baz"
    }
},
{
    version: [1, 0]
    schema: {
        renamed:     string
        optional?:   int32
        withDefault: "foo" | *"bar" | "baz"
    }
},
{
    version: [1, 1]
    schema: {
        renamed:     string
        optional?:   int32
        withDefault: "foo" | *"bar" | "baz" | "bing"
    }
},
{
    version: [2, 0]
    schema: {
        toObj:     {
            init: string
        }
        optional?:   int32
        withDefault: "foo" | *"bar" | "baz" | "bing"
    }
}]

lenses: [{
    to: [0, 0]
    from: [0, 1]
    input: _
    result: {
        init: input.init
    }
},
{
    to: [0, 1]
    from: [0, 2]
    input: _
    result: {
        init: input.init
        if (input.optional != _|_) {
            optional: input.optional
        }
    }
},
{
    to: [0, 2]
    from: [0, 3]
    input: _
    result: {
        init: input.init
        if (input.optional != _|_) {
            optional: input.optional
        }
        // TODO: withDefault: input.withDefault doesn't work
        withDefault: "foo"
    }
},
{
    to: [0, 3]
    from: [1, 0]
    input: _
    result: {
        init: input.renamed
        if (input.optional != _|_) {
            optional: input.optional
        }

        withDefault: input.withDefault
    }
},
{
    to: [1, 0]
    from: [1, 1]
    input: _
    result: {
        renamed: input.renamed
        if (input.optional != _|_) {
            optional: input.optional
        }
        // TODO: withDefault: input.withDefault doesn't work
        withDefault: "foo"
    }
},
{
    to: [1, 0]
    from: [0, 3]
    input: _
    result: {
        renamed: input.init
        if (input.optional != _|_) {
            optional: input.optional
        }
        // TODO: withDefault: input.withDefault doesn't work
        withDefault: "foo"
    }
},
{
    to: [1, 1]
    from: [2, 0]
    input: _
    result: {
        renamed: input.toObj.init
        if (input.optional != _|_) {
            optional: input.optional
        }
        // TODO: withDefault: input.withDefault doesn't work
        withDefault: "foo"
    }
},
{
    to: [2, 0]
    from: [1, 1]
    input: _
    result: {
        toObj: {
            init: input.renamed
        }
        if (input.optional != _|_) {
            optional: input.optional
        }
        // TODO: withDefault: input.withDefault doesn't work
        withDefault: "foo"
    }
}]
