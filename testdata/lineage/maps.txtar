# a schema containing various different combinations of map-ish structures

#lineagePath: lin
#subpath
-- in.cue --
import "github.com/grafana/thema"

lin: thema.#Lineage
lin: name: "maps"
lin: schemas: [{
	version: [0, 0]
	schema: {
		valPrimitive: [string]: bool
		valList: [string]: [...string]
		valStruct: [string]: foo: string
		optValPrimitive?: [string]: bool
		optValList?: [string]: [...string]
		optValStruct?: [string]: foo: string
		refValue: [string]: aStruct
		someField: aMap
	}
}]
lin: lenses: []

aMap: [string]: bool
aStruct: foo:   string
-- out/oapi-generate/nilcfg --
== 0.0.json
{
	"openapi": "3.0.0"
	"info": {
		"title":   "map"
		"version": "0.0"
	}
	"paths": {}
	"components": {
		"schemas": {
			"aMap": {
				"type": "object", "additionalProperties": {
					"type": "boolean"
				}
			}
			"aStruct": {
				"type": "object", "required": ["foo"]
				"properties": {
					"foo": {
						"type": "string"
					}
				}
			}
			"map": {
				"type": "object", "required": ["valPrimitive", "valList", "valStruct", "refValue", "someField"]
				"properties": {
					"valPrimitive": {
						"type": "object", "additionalProperties": {
							"type": "boolean"
						}
					}
					"valList": {
						"type": "object", "additionalProperties": {
							"type": "array", "items": {
								"type": "string"
							}
						}
					}
					"valStruct": {
						"type": "object", "additionalProperties": {
							"type": "object", "required": ["foo"]
							"properties": {
								"foo": {
									"type": "string"
								}
							}
						}
					}
					"optValPrimitive": {
						"type": "object", "additionalProperties": {
							"type": "boolean"
						}
					}
					"optValList": {
						"type": "object", "additionalProperties": {
							"type": "array", "items": {
								"type": "string"
							}
						}
					}
					"optValStruct": {
						"type": "object", "additionalProperties": {
							"type": "object", "required": ["foo"]
							"properties": {
								"foo": {
									"type": "string"
								}
							}
						}
					}
					"refValue": {
						"type": "object", "additionalProperties": {
							"$ref": "#/components/schemas/aStruct"
						}
					}
					"someField": {
						"$ref": "#/components/schemas/aMap"
					}
				}
			}
		}
	}
}
-- out/oapi-generate/group --
== 0.0.json
{
	"openapi": "3.0.0"
	"info": {
		"title":   "map"
		"version": "0.0"
	}
	"paths": {}
	"components": {
		"schemas": {
			"valPrimitive": {
				"type": "object", "additionalProperties": {
					"type": "boolean"
				}
			}
			"valList": {
				"type": "object", "additionalProperties": {
					"type": "array", "items": {
						"type": "string"
					}
				}
			}
			"valStruct": {
				"type": "object", "additionalProperties": {
					"type": "object", "required": ["foo"]
					"properties": {
						"foo": {
							"type": "string"
						}
					}
				}
			}
			"optValPrimitive": {
				"type": "object", "additionalProperties": {
					"type": "boolean"
				}
			}
			"optValList": {
				"type": "object", "additionalProperties": {
					"type": "array", "items": {
						"type": "string"
					}
				}
			}
			"optValStruct": {
				"type": "object", "additionalProperties": {
					"type": "object", "required": ["foo"]
					"properties": {
						"foo": {
							"type": "string"
						}
					}
				}
			}
			"aStruct": {
				"type": "object", "required": ["foo"]
				"properties": {
					"foo": {
						"type": "string"
					}
				}
			}
			"refValue": {
				"type": "object", "additionalProperties": {
					"$ref": "#/components/schemas/aStruct"
				}
			}
			"someField": {
				"type": "object", "additionalProperties": {
					"type": "boolean"
				}
			}
		}
	}
}
-- out/oapi-generate/expandrefs --
== 0.0.json
{
	"openapi": "3.0.0"
	"info": {
		"title":   "map"
		"version": "0.0"
	}
	"paths": {}
	"components": {
		"schemas": {
			"map": {
				"type": "object", "required": ["valPrimitive", "valList", "valStruct", "refValue", "someField"]
				"properties": {
					"valPrimitive": {
						"type": "object", "additionalProperties": {
							"type": "boolean"
						}
					}
					"valList": {
						"type": "object", "additionalProperties": {
							"type": "array", "items": {
								"type": "string"
							}
						}
					}
					"valStruct": {
						"type": "object", "additionalProperties": {
							"type": "object", "required": ["foo"]
							"properties": {
								"foo": {
									"type": "string"
								}
							}
						}
					}
					"optValPrimitive": {
						"type": "object", "additionalProperties": {
							"type": "boolean"
						}
					}
					"optValList": {
						"type": "object", "additionalProperties": {
							"type": "array", "items": {
								"type": "string"
							}
						}
					}
					"optValStruct": {
						"type": "object", "additionalProperties": {
							"type": "object", "required": ["foo"]
							"properties": {
								"foo": {
									"type": "string"
								}
							}
						}
					}
					"refValue": {
						"type": "object", "additionalProperties": {
							"type": "object", "required": ["foo"]
							"properties": {
								"foo": {
									"type": "string"
								}
							}
						}
					}
					"someField": {
						"type": "object", "additionalProperties": {
							"type": "boolean"
						}
					}
				}
			}
		}
	}
}
-- out/oapi-generate/selfcontained --
== 0.0.json
{
	"openapi": "3.0.0"
	"info": {
		"title":   "map"
		"version": "0.0"
	}
	"paths": {}
	"components": {
		"schemas": {
			"expand": {}
			"map": {
				"type": "object", "$ref": "#/components/schemas/expand"
			}
		}
	}
}
-- out/oapi-generate/subpath --
== 0.0.json
{
	"openapi": "3.0.0"
	"info": {
		"title":   "someField"
		"version": "0.0"
	}
	"paths": {}
	"components": {
		"schemas": {
			"someField": {
				"type": "object", "additionalProperties": {
					"type": "boolean"
				}
			}
		}
	}
}
-- out/oapi-generate/subpathroot --
== 0.0.json
{
	"openapi": "3.0.0"
	"info": {
		"title":   "overriddenName"
		"version": "0.0"
	}
	"paths": {}
	"components": {
		"schemas": {
			"overriddenName": {
				"type": "object", "additionalProperties": {
					"type": "boolean"
				}
			}
		}
	}
}
-- out/encoding/openapi/TestGenerateVanilla/nilcfg --
== 0.0.json
{
	"openapi": "3.0.0"
	"info": {
		"title":   "map"
		"version": "0.0"
	}
	"paths": {}
	"components": {
		"schemas": {
			"aMap": {
				"type": "object", "additionalProperties": {
					"type": "boolean"
				}
			}
			"aStruct": {
				"type": "object", "required": ["foo"]
				"properties": {
					"foo": {
						"type": "string"
					}
				}
			}
			"map": {
				"type": "object", "required": ["valPrimitive", "valList", "valStruct", "refValue", "someField"]
				"properties": {
					"valPrimitive": {
						"type": "object", "additionalProperties": {
							"type": "boolean"
						}
					}
					"valList": {
						"type": "object", "additionalProperties": {
							"type": "array", "items": {
								"type": "string"
							}
						}
					}
					"valStruct": {
						"type": "object", "additionalProperties": {
							"type": "object", "required": ["foo"]
							"properties": {
								"foo": {
									"type": "string"
								}
							}
						}
					}
					"optValPrimitive": {
						"type": "object", "additionalProperties": {
							"type": "boolean"
						}
					}
					"optValList": {
						"type": "object", "additionalProperties": {
							"type": "array", "items": {
								"type": "string"
							}
						}
					}
					"optValStruct": {
						"type": "object", "additionalProperties": {
							"type": "object", "required": ["foo"]
							"properties": {
								"foo": {
									"type": "string"
								}
							}
						}
					}
					"refValue": {
						"type": "object", "additionalProperties": {
							"$ref": "#/components/schemas/aStruct"
						}
					}
					"someField": {
						"$ref": "#/components/schemas/aMap"
					}
				}
			}
		}
	}
}
-- out/encoding/openapi/TestGenerateVanilla/group --
== 0.0.json
{
	"openapi": "3.0.0"
	"info": {
		"title":   "map"
		"version": "0.0"
	}
	"paths": {}
	"components": {
		"schemas": {
			"valPrimitive": {
				"type": "object", "additionalProperties": {
					"type": "boolean"
				}
			}
			"valList": {
				"type": "object", "additionalProperties": {
					"type": "array", "items": {
						"type": "string"
					}
				}
			}
			"valStruct": {
				"type": "object", "additionalProperties": {
					"type": "object", "required": ["foo"]
					"properties": {
						"foo": {
							"type": "string"
						}
					}
				}
			}
			"optValPrimitive": {
				"type": "object", "additionalProperties": {
					"type": "boolean"
				}
			}
			"optValList": {
				"type": "object", "additionalProperties": {
					"type": "array", "items": {
						"type": "string"
					}
				}
			}
			"optValStruct": {
				"type": "object", "additionalProperties": {
					"type": "object", "required": ["foo"]
					"properties": {
						"foo": {
							"type": "string"
						}
					}
				}
			}
			"aStruct": {
				"type": "object", "required": ["foo"]
				"properties": {
					"foo": {
						"type": "string"
					}
				}
			}
			"refValue": {
				"type": "object", "additionalProperties": {
					"$ref": "#/components/schemas/aStruct"
				}
			}
			"someField": {
				"type": "object", "additionalProperties": {
					"type": "boolean"
				}
			}
		}
	}
}
-- out/encoding/openapi/TestGenerateVanilla/expandrefs --
== 0.0.json
{
	"openapi": "3.0.0"
	"info": {
		"title":   "map"
		"version": "0.0"
	}
	"paths": {}
	"components": {
		"schemas": {
			"map": {
				"type": "object", "required": ["valPrimitive", "valList", "valStruct", "refValue", "someField"]
				"properties": {
					"valPrimitive": {
						"type": "object", "additionalProperties": {
							"type": "boolean"
						}
					}
					"valList": {
						"type": "object", "additionalProperties": {
							"type": "array", "items": {
								"type": "string"
							}
						}
					}
					"valStruct": {
						"type": "object", "additionalProperties": {
							"type": "object", "required": ["foo"]
							"properties": {
								"foo": {
									"type": "string"
								}
							}
						}
					}
					"optValPrimitive": {
						"type": "object", "additionalProperties": {
							"type": "boolean"
						}
					}
					"optValList": {
						"type": "object", "additionalProperties": {
							"type": "array", "items": {
								"type": "string"
							}
						}
					}
					"optValStruct": {
						"type": "object", "additionalProperties": {
							"type": "object", "required": ["foo"]
							"properties": {
								"foo": {
									"type": "string"
								}
							}
						}
					}
					"refValue": {
						"type": "object", "additionalProperties": {
							"type": "object", "required": ["foo"]
							"properties": {
								"foo": {
									"type": "string"
								}
							}
						}
					}
					"someField": {
						"type": "object", "additionalProperties": {
							"type": "boolean"
						}
					}
				}
			}
		}
	}
}
-- out/encoding/openapi/TestGenerateVanilla/selfcontained --
== 0.0.json
{
	"openapi": "3.0.0"
	"info": {
		"title":   "map"
		"version": "0.0"
	}
	"paths": {}
	"components": {
		"schemas": {
			"map": {
				"type": "object", "$ref": "#/components/schemas/struct"
			}
			"struct": {}
		}
	}
}
-- out/encoding/openapi/TestGenerateVanilla/subpath --
== 0.0.json
{
	"openapi": "3.0.0"
	"info": {
		"title":   "someField"
		"version": "0.0"
	}
	"paths": {}
	"components": {
		"schemas": {
			"someField": {
				"type": "object", "additionalProperties": {
					"type": "boolean"
				}
			}
		}
	}
}
-- out/encoding/openapi/TestGenerateVanilla/subpathroot --
== 0.0.json
{
	"openapi": "3.0.0"
	"info": {
		"title":   "overriddenName"
		"version": "0.0"
	}
	"paths": {}
	"components": {
		"schemas": {
			"overriddenName": {
				"type": "object", "additionalProperties": {
					"type": "boolean"
				}
			}
		}
	}
}
-- out/bind --
Schema count: 1
Schema versions: 0.0
Lenses count: 0
-- out/encoding/openapi/TestGenerate/nilcfg --
== 0.0.json
{
  "openapi": "3.0.0",
  "info": {
    "title": "map",
    "version": "0.0"
  },
  "paths": {},
  "components": {
    "schemas": {
      "aMap": {
        "type": "object",
        "additionalProperties": {
          "type": "boolean"
        }
      },
      "aStruct": {
        "type": "object",
        "required": [
          "foo"
        ],
        "properties": {
          "foo": {
            "type": "string"
          }
        }
      },
      "map": {
        "type": "object",
        "required": [
          "valPrimitive",
          "valList",
          "valStruct",
          "refValue",
          "someField"
        ],
        "properties": {
          "valPrimitive": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            }
          },
          "valList": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "valStruct": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "required": [
                "foo"
              ],
              "properties": {
                "foo": {
                  "type": "string"
                }
              }
            }
          },
          "optValPrimitive": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            }
          },
          "optValList": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "optValStruct": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "required": [
                "foo"
              ],
              "properties": {
                "foo": {
                  "type": "string"
                }
              }
            }
          },
          "refValue": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/aStruct"
            }
          },
          "someField": {
            "$ref": "#/components/schemas/aMap"
          }
        }
      }
    }
  }
}
-- out/encoding/openapi/TestGenerate/group --
== 0.0.json
{
  "openapi": "3.0.0",
  "info": {
    "title": "map",
    "version": "0.0"
  },
  "paths": {},
  "components": {
    "schemas": {
      "valPrimitive": {
        "type": "object",
        "additionalProperties": {
          "type": "boolean"
        }
      },
      "valList": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "valStruct": {
        "type": "object",
        "additionalProperties": {
          "type": "object",
          "required": [
            "foo"
          ],
          "properties": {
            "foo": {
              "type": "string"
            }
          }
        }
      },
      "optValPrimitive": {
        "type": "object",
        "additionalProperties": {
          "type": "boolean"
        }
      },
      "optValList": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "optValStruct": {
        "type": "object",
        "additionalProperties": {
          "type": "object",
          "required": [
            "foo"
          ],
          "properties": {
            "foo": {
              "type": "string"
            }
          }
        }
      },
      "aStruct": {
        "type": "object",
        "required": [
          "foo"
        ],
        "properties": {
          "foo": {
            "type": "string"
          }
        }
      },
      "refValue": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/aStruct"
        }
      },
      "someField": {
        "type": "object",
        "additionalProperties": {
          "type": "boolean"
        }
      }
    }
  }
}
-- out/encoding/openapi/TestGenerate/expandrefs --
== 0.0.json
{
  "openapi": "3.0.0",
  "info": {
    "title": "map",
    "version": "0.0"
  },
  "paths": {},
  "components": {
    "schemas": {
      "map": {
        "type": "object",
        "required": [
          "valPrimitive",
          "valList",
          "valStruct",
          "refValue",
          "someField"
        ],
        "properties": {
          "valPrimitive": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            }
          },
          "valList": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "valStruct": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "required": [
                "foo"
              ],
              "properties": {
                "foo": {
                  "type": "string"
                }
              }
            }
          },
          "optValPrimitive": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            }
          },
          "optValList": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "optValStruct": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "required": [
                "foo"
              ],
              "properties": {
                "foo": {
                  "type": "string"
                }
              }
            }
          },
          "refValue": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "required": [
                "foo"
              ],
              "properties": {
                "foo": {
                  "type": "string"
                }
              }
            }
          },
          "someField": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            }
          }
        }
      }
    }
  }
}
-- out/encoding/openapi/TestGenerate/selfcontained --
== 0.0.json
{
  "openapi": "3.0.0",
  "info": {
    "title": "map",
    "version": "0.0"
  },
  "paths": {},
  "components": {
    "schemas": {
      "map": {
        "type": "object",
        "$ref": "#/components/schemas/struct"
      },
      "struct": {}
    }
  }
}
-- out/encoding/openapi/TestGenerate/subpath --
== 0.0.json
{
  "openapi": "3.0.0",
  "info": {
    "title": "someField",
    "version": "0.0"
  },
  "paths": {},
  "components": {
    "schemas": {
      "someField": {
        "type": "object",
        "additionalProperties": {
          "type": "boolean"
        }
      }
    }
  }
}
-- out/encoding/openapi/TestGenerate/subpathroot --
== 0.0.json
{
  "openapi": "3.0.0",
  "info": {
    "title": "overriddenName",
    "version": "0.0"
  },
  "paths": {},
  "components": {
    "schemas": {
      "overriddenName": {
        "type": "object",
        "additionalProperties": {
          "type": "boolean"
        }
      }
    }
  }
}
-- out/encoding/gocode/TestGenerate/group --
== maps_type_gen.go
package maps

// AStruct defines model for aStruct.
type AStruct struct {
	Foo string `json:"foo"`
}

// OptValList defines model for optValList.
type OptValList map[string][]string

// OptValPrimitive defines model for optValPrimitive.
type OptValPrimitive map[string]bool

// OptValStruct defines model for optValStruct.
type OptValStruct map[string]struct {
	Foo string `json:"foo"`
}

// RefValue defines model for refValue.
type RefValue map[string]AStruct

// SomeField defines model for someField.
type SomeField map[string]bool

// ValList defines model for valList.
type ValList map[string][]string

// ValPrimitive defines model for valPrimitive.
type ValPrimitive map[string]bool

// ValStruct defines model for valStruct.
type ValStruct map[string]struct {
	Foo string `json:"foo"`
}
-- out/encoding/gocode/TestGenerate/depointerized --
== maps_type_gen.go
package maps

// AMap defines model for aMap.
type AMap map[string]bool

// AStruct defines model for aStruct.
type AStruct struct {
	Foo string `json:"foo"`
}

// Maps defines model for maps.
type Maps struct {
	OptValList      map[string][]string `json:"optValList,omitempty"`
	OptValPrimitive map[string]bool     `json:"optValPrimitive,omitempty"`
	OptValStruct    map[string]struct {
		Foo string `json:"foo"`
	} `json:"optValStruct,omitempty"`
	RefValue     map[string]AStruct  `json:"refValue"`
	SomeField    AMap                `json:"someField"`
	ValList      map[string][]string `json:"valList"`
	ValPrimitive map[string]bool     `json:"valPrimitive"`
	ValStruct    map[string]struct {
		Foo string `json:"foo"`
	} `json:"valStruct"`
}
-- out/encoding/gocode/TestGenerate/godeclincomments --
== maps_type_gen.go
package maps

// AMap defines model for aMap.
type AMap map[string]bool

// AStruct defines model for aStruct.
type AStruct struct {
	Foo string `json:"foo"`
}

// Maps defines model for maps.
type Maps struct {
	OptValList      map[string][]string `json:"optValList,omitempty"`
	OptValPrimitive map[string]bool     `json:"optValPrimitive,omitempty"`
	OptValStruct    map[string]struct {
		Foo string `json:"foo"`
	} `json:"optValStruct,omitempty"`
	RefValue     map[string]AStruct  `json:"refValue"`
	SomeField    AMap                `json:"someField"`
	ValList      map[string][]string `json:"valList"`
	ValPrimitive map[string]bool     `json:"valPrimitive"`
	ValStruct    map[string]struct {
		Foo string `json:"foo"`
	} `json:"valStruct"`
}
-- out/encoding/gocode/TestGenerate/expandref --
== maps_type_gen.go
package maps

// Maps defines model for maps.
type Maps struct {
	OptValList      map[string][]string `json:"optValList,omitempty"`
	OptValPrimitive map[string]bool     `json:"optValPrimitive,omitempty"`
	OptValStruct    map[string]struct {
		Foo string `json:"foo"`
	} `json:"optValStruct,omitempty"`
	RefValue map[string]struct {
		Foo string `json:"foo"`
	} `json:"refValue"`
	SomeField    map[string]bool     `json:"someField"`
	ValList      map[string][]string `json:"valList"`
	ValPrimitive map[string]bool     `json:"valPrimitive"`
	ValStruct    map[string]struct {
		Foo string `json:"foo"`
	} `json:"valStruct"`
}
-- out/encoding/gocode/TestGenerate/nil --
== maps_type_gen.go
package maps

// AMap defines model for aMap.
type AMap map[string]bool

// AStruct defines model for aStruct.
type AStruct struct {
	Foo string `json:"foo"`
}

// Maps defines model for maps.
type Maps struct {
	OptValList      map[string][]string `json:"optValList,omitempty"`
	OptValPrimitive map[string]bool     `json:"optValPrimitive,omitempty"`
	OptValStruct    map[string]struct {
		Foo string `json:"foo"`
	} `json:"optValStruct,omitempty"`
	RefValue     map[string]AStruct  `json:"refValue"`
	SomeField    AMap                `json:"someField"`
	ValList      map[string][]string `json:"valList"`
	ValPrimitive map[string]bool     `json:"valPrimitive"`
	ValStruct    map[string]struct {
		Foo string `json:"foo"`
	} `json:"valStruct"`
}
