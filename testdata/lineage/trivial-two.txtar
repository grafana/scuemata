-- in.cue --

import "github.com/grafana/thema"

thema.#Lineage
name: "trivial-two"
schemas: [{
    version: [0, 0]
    schema: {
        firstfield: string
    }
},
{
    version: [0, 1]
    schema: {
        firstfield: string
        secondfield?: int32
    }
}]

lenses: [{
    from: [0, 1]
    to: [0, 0]
    input: _
    result: {
        firstfield: input.firstfield
    }
}]
-- out/bind --
Schema count: 2
Schema versions: 0.0, 0.1
Lenses count: 1
-- out/oapi-generate/nil --
== 0.0
{
	"openapi": "3.0.0"
	"info": {
		"title":   "trivialtwo"
		"version": "0.0"
	}
	"paths": {}
	"components": {
		"schemas": {
			"trivialtwo": {
				"type": "object", "required": ["firstfield"]
				"properties": {
					"firstfield": {
						"type": "string"
					}
				}
			}
		}
	}
}
== 0.1
{
	"openapi": "3.0.0"
	"info": {
		"title":   "trivialtwo"
		"version": "0.1"
	}
	"paths": {}
	"components": {
		"schemas": {
			"trivialtwo": {
				"type": "object", "required": ["firstfield"]
				"properties": {
					"firstfield": {
						"type": "string"
					}
					"secondfield": {
						"type": "integer", "format": "int32"
					}
				}
			}
		}
	}
}
-- out/oapi-generate/group --
== 0.0.json
{
	"openapi": "3.0.0"
	"info": {
		"title":   "trivialtwo"
		"version": "0.0"
	}
	"paths": {}
	"components": {
		"schemas": {
			"firstfield": {
				"type": "string"
			}
		}
	}
}
== 0.1.json
{
	"openapi": "3.0.0"
	"info": {
		"title":   "trivialtwo"
		"version": "0.1"
	}
	"paths": {}
	"components": {
		"schemas": {
			"firstfield": {
				"type": "string"
			}
			"secondfield": {
				"type": "integer", "format": "int32"
			}
		}
	}
}
-- out/oapi-generate/expandrefs --
== 0.0.json
{
	"openapi": "3.0.0"
	"info": {
		"title":   "trivialtwo"
		"version": "0.0"
	}
	"paths": {}
	"components": {
		"schemas": {
			"trivialtwo": {
				"type": "object", "required": ["firstfield"]
				"properties": {
					"firstfield": {
						"type": "string"
					}
				}
			}
		}
	}
}
== 0.1.json
{
	"openapi": "3.0.0"
	"info": {
		"title":   "trivialtwo"
		"version": "0.1"
	}
	"paths": {}
	"components": {
		"schemas": {
			"trivialtwo": {
				"type": "object", "required": ["firstfield"]
				"properties": {
					"firstfield": {
						"type": "string"
					}
					"secondfield": {
						"type": "integer", "format": "int32"
					}
				}
			}
		}
	}
}
-- out/oapi-generate/selfcontained --
== 0.0.json
{
	"openapi": "3.0.0"
	"info": {
		"title":   "trivialtwo"
		"version": "0.0"
	}
	"paths": {}
	"components": {
		"schemas": {
			"oneschemaversionless": {}
			"trivialtwo": {
				"type": "object", "$ref": "#/components/schemas/oneschemaversionless"
			}
		}
	}
}
== 0.1.json
{
	"openapi": "3.0.0"
	"info": {
		"title":   "trivialtwo"
		"version": "0.1"
	}
	"paths": {}
	"components": {
		"schemas": {
			"trivialtwo": {}
		}
	}
}
-- out/oapi-generate/subpath --
subpath "someField" not present in schema:
    ../../lineage.cue:246:2
subpath "someField" not present in schema:
    ./in.cue:14:5
-- out/oapi-generate/subpathroot --
subpath "someField" not present in schema:
    ../../lineage.cue:246:2
subpath "someField" not present in schema:
    ./in.cue:14:5
-- out/oapi-generate/nilconfig --
== 0.0.json
{
	"openapi": "3.0.0"
	"info": {
		"title":   "trivialtwo"
		"version": "0.0"
	}
	"paths": {}
	"components": {
		"schemas": {
			"trivialtwo": {
				"type": "object", "required": ["firstfield"]
				"properties": {
					"firstfield": {
						"type": "string"
					}
				}
			}
		}
	}
}
== 0.1.json
{
	"openapi": "3.0.0"
	"info": {
		"title":   "trivialtwo"
		"version": "0.1"
	}
	"paths": {}
	"components": {
		"schemas": {
			"trivialtwo": {
				"type": "object", "required": ["firstfield"]
				"properties": {
					"firstfield": {
						"type": "string"
					}
					"secondfield": {
						"type": "integer", "format": "int32"
					}
				}
			}
		}
	}
}
-- out/encoding/openapi/TestGenerateVanilla/nilcfg --
== 0.0.json
{
	"openapi": "3.0.0"
	"info": {
		"title":   "trivialtwo"
		"version": "0.0"
	}
	"paths": {}
	"components": {
		"schemas": {
			"trivialtwo": {
				"type": "object", "required": ["firstfield"]
				"properties": {
					"firstfield": {
						"type": "string"
					}
				}
			}
		}
	}
}
== 0.1.json
{
	"openapi": "3.0.0"
	"info": {
		"title":   "trivialtwo"
		"version": "0.1"
	}
	"paths": {}
	"components": {
		"schemas": {
			"trivialtwo": {
				"type": "object", "required": ["firstfield"]
				"properties": {
					"firstfield": {
						"type": "string"
					}
					"secondfield": {
						"type": "integer", "format": "int32"
					}
				}
			}
		}
	}
}
-- out/encoding/openapi/TestGenerateVanilla/group --
== 0.0.json
{
	"openapi": "3.0.0"
	"info": {
		"title":   "trivialtwo"
		"version": "0.0"
	}
	"paths": {}
	"components": {
		"schemas": {
			"firstfield": {
				"type": "string"
			}
		}
	}
}
== 0.1.json
{
	"openapi": "3.0.0"
	"info": {
		"title":   "trivialtwo"
		"version": "0.1"
	}
	"paths": {}
	"components": {
		"schemas": {
			"firstfield": {
				"type": "string"
			}
			"secondfield": {
				"type": "integer", "format": "int32"
			}
		}
	}
}
-- out/encoding/openapi/TestGenerateVanilla/expandrefs --
== 0.0.json
{
	"openapi": "3.0.0"
	"info": {
		"title":   "trivialtwo"
		"version": "0.0"
	}
	"paths": {}
	"components": {
		"schemas": {
			"trivialtwo": {
				"type": "object", "required": ["firstfield"]
				"properties": {
					"firstfield": {
						"type": "string"
					}
				}
			}
		}
	}
}
== 0.1.json
{
	"openapi": "3.0.0"
	"info": {
		"title":   "trivialtwo"
		"version": "0.1"
	}
	"paths": {}
	"components": {
		"schemas": {
			"trivialtwo": {
				"type": "object", "required": ["firstfield"]
				"properties": {
					"firstfield": {
						"type": "string"
					}
					"secondfield": {
						"type": "integer", "format": "int32"
					}
				}
			}
		}
	}
}
-- out/encoding/openapi/TestGenerateVanilla/selfcontained --
== 0.0.json
{
	"openapi": "3.0.0"
	"info": {
		"title":   "trivialtwo"
		"version": "0.0"
	}
	"paths": {}
	"components": {
		"schemas": {
			"refstruct": {}
			"trivialtwo": {
				"type": "object", "$ref": "#/components/schemas/refstruct"
			}
		}
	}
}
== 0.1.json
{
	"openapi": "3.0.0"
	"info": {
		"title":   "trivialtwo"
		"version": "0.1"
	}
	"paths": {}
	"components": {
		"schemas": {
			"trivialtwo": {}
		}
	}
}
-- out/encoding/openapi/TestGenerateVanilla/subpath --
subpath "someField" not present in schema:
    ../../lineage.cue:246:2
subpath "someField" not present in schema:
    ./in.cue:14:5
-- out/encoding/openapi/TestGenerateVanilla/subpathroot --
subpath "someField" not present in schema:
    ../../lineage.cue:246:2
subpath "someField" not present in schema:
    ./in.cue:14:5
-- out/encoding/openapi/TestGenerate/nilcfg --
== 0.0.json
{
  "openapi": "3.0.0",
  "info": {
    "title": "trivialtwo",
    "version": "0.0"
  },
  "paths": {},
  "components": {
    "schemas": {
      "trivialtwo": {
        "type": "object",
        "required": [
          "firstfield"
        ],
        "properties": {
          "firstfield": {
            "type": "string"
          }
        }
      }
    }
  }
}== 0.1.json
{
  "openapi": "3.0.0",
  "info": {
    "title": "trivialtwo",
    "version": "0.1"
  },
  "paths": {},
  "components": {
    "schemas": {
      "trivialtwo": {
        "type": "object",
        "required": [
          "firstfield"
        ],
        "properties": {
          "firstfield": {
            "type": "string"
          },
          "secondfield": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    }
  }
}
-- out/encoding/openapi/TestGenerate/group --
== 0.0.json
{
  "openapi": "3.0.0",
  "info": {
    "title": "trivialtwo",
    "version": "0.0"
  },
  "paths": {},
  "components": {
    "schemas": {
      "firstfield": {
        "type": "string"
      }
    }
  }
}== 0.1.json
{
  "openapi": "3.0.0",
  "info": {
    "title": "trivialtwo",
    "version": "0.1"
  },
  "paths": {},
  "components": {
    "schemas": {
      "firstfield": {
        "type": "string"
      },
      "secondfield": {
        "type": "integer",
        "format": "int32"
      }
    }
  }
}
-- out/encoding/openapi/TestGenerate/expandrefs --
== 0.0.json
{
  "openapi": "3.0.0",
  "info": {
    "title": "trivialtwo",
    "version": "0.0"
  },
  "paths": {},
  "components": {
    "schemas": {
      "trivialtwo": {
        "type": "object",
        "required": [
          "firstfield"
        ],
        "properties": {
          "firstfield": {
            "type": "string"
          }
        }
      }
    }
  }
}== 0.1.json
{
  "openapi": "3.0.0",
  "info": {
    "title": "trivialtwo",
    "version": "0.1"
  },
  "paths": {},
  "components": {
    "schemas": {
      "trivialtwo": {
        "type": "object",
        "required": [
          "firstfield"
        ],
        "properties": {
          "firstfield": {
            "type": "string"
          },
          "secondfield": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    }
  }
}
-- out/encoding/openapi/TestGenerate/selfcontained --
== 0.0.json
{
  "openapi": "3.0.0",
  "info": {
    "title": "trivialtwo",
    "version": "0.0"
  },
  "paths": {},
  "components": {
    "schemas": {
      "refstruct": {},
      "trivialtwo": {
        "type": "object",
        "$ref": "#/components/schemas/refstruct"
      }
    }
  }
}== 0.1.json
{
  "openapi": "3.0.0",
  "info": {
    "title": "trivialtwo",
    "version": "0.1"
  },
  "paths": {},
  "components": {
    "schemas": {
      "trivialtwo": {}
    }
  }
}
-- out/encoding/gocode/TestGenerate/group --
== trivial-two_type_gen.go
package trivialtwo

// Firstfield defines model for firstfield.
type Firstfield = string
== trivial-two_type_gen.go
package trivialtwo

// Firstfield defines model for firstfield.
type Firstfield = string

// Secondfield defines model for secondfield.
type Secondfield = int32
-- out/encoding/gocode/TestGenerate/depointerized --
== trivial-two_type_gen.go
package trivialtwo

// Trivialtwo defines model for trivialtwo.
type Trivialtwo struct {
	Firstfield string `json:"firstfield"`
}
== trivial-two_type_gen.go
package trivialtwo

// Trivialtwo defines model for trivialtwo.
type Trivialtwo struct {
	Firstfield  string `json:"firstfield"`
	Secondfield int32  `json:"secondfield,omitempty"`
}
-- out/encoding/gocode/TestGenerate/godeclincomments --
== trivial-two_type_gen.go
package trivialtwo

// Trivialtwo defines model for trivialtwo.
type Trivialtwo struct {
	Firstfield string `json:"firstfield"`
}
== trivial-two_type_gen.go
package trivialtwo

// Trivialtwo defines model for trivialtwo.
type Trivialtwo struct {
	Firstfield  string `json:"firstfield"`
	Secondfield *int32 `json:"secondfield,omitempty"`
}
-- out/encoding/gocode/TestGenerate/expandref --
== trivial-two_type_gen.go
package trivialtwo

// Trivialtwo defines model for trivialtwo.
type Trivialtwo struct {
	Firstfield string `json:"firstfield"`
}
== trivial-two_type_gen.go
package trivialtwo

// Trivialtwo defines model for trivialtwo.
type Trivialtwo struct {
	Firstfield  string `json:"firstfield"`
	Secondfield *int32 `json:"secondfield,omitempty"`
}
-- out/encoding/gocode/TestGenerate/nil --
== trivial-two_type_gen.go
package trivialtwo

// Trivialtwo defines model for trivialtwo.
type Trivialtwo struct {
	Firstfield string `json:"firstfield"`
}
== trivial-two_type_gen.go
package trivialtwo

// Trivialtwo defines model for trivialtwo.
type Trivialtwo struct {
	Firstfield  string `json:"firstfield"`
	Secondfield *int32 `json:"secondfield,omitempty"`
}
