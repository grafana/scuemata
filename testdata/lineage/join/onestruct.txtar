# joinSchema contains a field that is a struct
-- in.cue --
import "github.com/grafana/thema"

thema.#Lineage
name: "onestruct"
joinSchema: {
    aField: {
        defLitField: string
    }
}
schemas: [{
	version: [0, 0]
	schema: {
		foo: string
	}
}]
lenses: []

-- out/encoding/openapi/TestGenerateVanilla/nilcfg --
== 0.0.json
{
	"openapi": "3.0.0"
	"info": {
		"title":   "struct"
		"version": "0.0"
	}
	"paths": {}
	"components": {
		"schemas": {
			"struct": {
				"type": "object", "properties": {
					"aField": {
						"type": "object", "required": ["defLitField"]
						"properties": {
							"defLitField": {
								"type": "string"
							}
						}
					}
					"foo": {
						"type": "string"
					}
				}
				"allOf": [{
					"required": ["aField"]
				}, {
					"required": ["foo"]
				}]
			}
		}
	}
}
-- out/encoding/openapi/TestGenerateVanilla/group --
== 0.0.json
{
	"openapi": "3.0.0"
	"info": {
		"title":   "struct"
		"version": "0.0"
	}
	"paths": {}
	"components": {
		"schemas": {
			"aField": {
				"type": "object", "required": ["defLitField"]
				"properties": {
					"defLitField": {
						"type": "string"
					}
				}
			}
			"foo": {
				"type": "string"
			}
		}
	}
}
-- out/encoding/openapi/TestGenerateVanilla/expandrefs --
== 0.0.json
{
	"openapi": "3.0.0"
	"info": {
		"title":   "struct"
		"version": "0.0"
	}
	"paths": {}
	"components": {
		"schemas": {
			"struct": {
				"type": "object", "required": ["aField", "foo"]
				"properties": {
					"aField": {
						"type": "object", "required": ["defLitField"]
						"properties": {
							"defLitField": {
								"type": "string"
							}
						}
					}
					"foo": {
						"type": "string"
					}
				}
			}
		}
	}
}
-- out/encoding/openapi/TestGenerateVanilla/selfcontained --
== 0.0.json
{
	"openapi": "3.0.0"
	"info": {
		"title":   "struct"
		"version": "0.0"
	}
	"paths": {}
	"components": {
		"schemas": {
			"joinSchema": {
				"type": "object", "required": ["aField"]
				"properties": {
					"aField": {
						"type": "object", "required": ["defLitField"]
						"properties": {
							"defLitField": {
								"type": "string"
							}
						}
					}
				}
				"minProperties": 1
			}
			"repeat": {
				"type": "object", "$ref": "#/components/schemas/joinSchema"
			}
			"struct": {
				"type": "object", "$ref": "#/components/schemas/repeat"
			}
		}
	}
}
-- out/bind --
Schema count: 1
Schema versions: 0.0
Lenses count: 0
-- out/encoding/openapi/TestGenerate/nilcfg --
== 0.0.json
{
  "openapi": "3.0.0",
  "info": {
    "title": "struct",
    "version": "0.0"
  },
  "paths": {},
  "components": {
    "schemas": {
      "struct": {
        "type": "object",
        "properties": {
          "aField": {
            "type": "object",
            "required": [
              "defLitField"
            ],
            "properties": {
              "defLitField": {
                "type": "string"
              }
            }
          },
          "foo": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "required": [
              "aField"
            ]
          },
          {
            "required": [
              "foo"
            ]
          }
        ]
      }
    }
  }
}
-- out/encoding/openapi/TestGenerate/group --
== 0.0.json
{
  "openapi": "3.0.0",
  "info": {
    "title": "struct",
    "version": "0.0"
  },
  "paths": {},
  "components": {
    "schemas": {
      "aField": {
        "type": "object",
        "required": [
          "defLitField"
        ],
        "properties": {
          "defLitField": {
            "type": "string"
          }
        }
      },
      "foo": {
        "type": "string"
      }
    }
  }
}
-- out/encoding/openapi/TestGenerate/expandrefs --
== 0.0.json
{
  "openapi": "3.0.0",
  "info": {
    "title": "struct",
    "version": "0.0"
  },
  "paths": {},
  "components": {
    "schemas": {
      "struct": {
        "type": "object",
        "required": [
          "aField",
          "foo"
        ],
        "properties": {
          "aField": {
            "type": "object",
            "required": [
              "defLitField"
            ],
            "properties": {
              "defLitField": {
                "type": "string"
              }
            }
          },
          "foo": {
            "type": "string"
          }
        }
      }
    }
  }
}
-- out/encoding/openapi/TestGenerate/selfcontained --
== 0.0.json
{
  "openapi": "3.0.0",
  "info": {
    "title": "struct",
    "version": "0.0"
  },
  "paths": {},
  "components": {
    "schemas": {
      "joinSchema": {
        "type": "object",
        "required": [
          "aField"
        ],
        "properties": {
          "aField": {
            "type": "object",
            "required": [
              "defLitField"
            ],
            "properties": {
              "defLitField": {
                "type": "string"
              }
            }
          }
        },
        "minProperties": 1
      },
      "repeat": {
        "type": "object",
        "$ref": "#/components/schemas/joinSchema"
      },
      "struct": {
        "type": "object",
        "$ref": "#/components/schemas/repeat"
      }
    }
  }
}
-- out/encoding/gocode/TestGenerate/group --
== onestruct_type_gen.go
package onestruct

// AField defines model for aField.
type AField struct {
	DefLitField string `json:"defLitField"`
}

// Foo defines model for foo.
type Foo = string
-- out/encoding/gocode/TestGenerate/depointerized --
== onestruct_type_gen.go
package onestruct

// Onestruct defines model for onestruct.
type Onestruct struct {
	AField struct {
		DefLitField string `json:"defLitField"`
	} `json:"aField"`
	Foo string `json:"foo"`
}
-- out/encoding/gocode/TestGenerate/godeclincomments --
== onestruct_type_gen.go
package onestruct

// Onestruct defines model for onestruct.
type Onestruct struct {
	AField struct {
		DefLitField string `json:"defLitField"`
	} `json:"aField"`
	Foo string `json:"foo"`
}
-- out/encoding/gocode/TestGenerate/expandref --
== onestruct_type_gen.go
package onestruct

// Onestruct defines model for onestruct.
type Onestruct struct {
	AField struct {
		DefLitField string `json:"defLitField"`
	} `json:"aField"`
	Foo string `json:"foo"`
}
-- out/encoding/gocode/TestGenerate/nil --
== onestruct_type_gen.go
package onestruct

// Onestruct defines model for onestruct.
type Onestruct struct {
	AField struct {
		DefLitField string `json:"defLitField"`
	} `json:"aField"`
	Foo string `json:"foo"`
}
