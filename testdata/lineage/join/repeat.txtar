# Case where the joinSchema is exactly the same as a schema in the lineage
-- in.cue --
import "github.com/grafana/thema"

thema.#Lineage
name: "repeat"
joinSchema: {
    foo: string
}
schemas: [{
	version: [0, 0]
	schema: {
		foo: string
	}
}]
lenses: []
-- out/bind --
Schema count: 1
Schema versions: 0.0
Lenses count: 0
-- out/encoding/openapi/TestGenerate/nilcfg --
== 0.0.json
{
  "openapi": "3.0.0",
  "info": {
    "title": "repeat",
    "version": "0.0"
  },
  "paths": {},
  "components": {
    "schemas": {
      "repeat": {
        "type": "object",
        "required": [
          "foo"
        ],
        "properties": {
          "foo": {
            "type": "string"
          }
        }
      }
    }
  }
}
-- out/encoding/openapi/TestGenerate/expandrefs --
== 0.0.json
{
  "openapi": "3.0.0",
  "info": {
    "title": "repeat",
    "version": "0.0"
  },
  "paths": {},
  "components": {
    "schemas": {
      "repeat": {
        "type": "object",
        "required": [
          "foo"
        ],
        "properties": {
          "foo": {
            "type": "string"
          }
        }
      }
    }
  }
}
-- out/encoding/openapi/TestGenerate/group --
== 0.0.json
{
  "openapi": "3.0.0",
  "info": {
    "title": "repeat",
    "version": "0.0"
  },
  "paths": {},
  "components": {
    "schemas": {
      "foo": {
        "type": "string"
      }
    }
  }
}
