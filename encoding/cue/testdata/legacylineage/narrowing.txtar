-- in.cue --
import "github.com/grafana/thema"

thema.#Lineage
name: "narrowing"
seqs: [
	{
		schemas: [
			{
				boolish: "true" | "false" | bool | string
			},
		]
	},
	{
		schemas: [
			{
				properbool: bool
			},
		]

		lens: forward: {
			to:         seqs[1].schemas[0]
			from:       seqs[0].schemas[0]
			translated: to & rel
			rel: {
				if ((from.boolish & string) != _|_) {
					properbool: from.boolish == "true"
				}
				if ((from.boolish & bool) != _|_) {
					properbool: from.boolish
				}
			}
			lacunas: [
				if ((from.boolish & string) != _|_) && ((from.boolish & ("true" | "false")) == _|_) {
					thema.#Lacuna & {
						sourceFields: [{
							path:  "boolish"
							value: from.boolish
						}]
						targetFields: [{
							path:  "properbool"
							value: to.properbool
						}]
						message: "boolish was a string but neither \"true\" nor \"false\"; fallback to treating as false"
						type:    thema.#LacunaTypes.LossyFieldMapping
					}
				},
			]
		}

		lens: reverse: {
			to:         seqs[0].schemas[0]
			from:       seqs[1].schemas[0]
			translated: to & rel
			rel: {
				// Preserving precise original form is a non-goal of thema in general.
				boolish: from.properbool
			}
			lacunas: []
		}
	},
]
-- out/rewrite-legacy-lineage --
import "github.com/grafana/thema"

thema.#Lineage
name: "narrowing"
schemas: [{
	version: [0, 0]
	schema: boolish: "true" | "false" | bool | string
}, {
	version: [1, 0]
	schema: properbool: bool
}]
lenses: [{
	to: [0, 0]
	from: [1, 0]
	input: _
	result: {
		// Preserving precise original form is a non-goal of thema in general.
		boolish: input.properbool
	}
	lacunas: []
}, {
	to: [0, 0]
	from: [1, 0]
	input: _
	result: {
		if ((input.boolish & string) != _|_) {
			properbool: input.boolish == "true"
		}
		if ((input.boolish & bool) != _|_) {
			properbool: input.boolish
		}
	}
	lacunas: [
		if ((input.boolish & string) != _|_) && ((input.boolish & ("true" | "false")) == _|_) {
			thema.#Lacuna & {
				sourceFields: [{
					path:  "boolish"
					value: input.boolish
				}]
				targetFields: [{
					path:  "properbool"
					value: result.properbool
				}]
				message: "boolish was a string but neither \"true\" nor \"false\"; fallback to treating as false"
				type:    thema.#LacunaTypes.LossyFieldMapping
			}
		},
	]
}]
