-- out/generate/0.0/group.go --
package defaultchange
-- out/generate/0.0/nil.go --
package disjunct

// Disjunct defines model for disjunct.
type Disjunct struct {
	Rootfield interface{} `json:"rootfield"`
}
-- out/generate/0.0/depointerized.go --
package defaultchange

// Disjunct defines model for disjunct.
type Disjunct struct {
	Rootfield interface{} `json:"rootfield"`
}
-- out/generate/0.0/godeclincomments.go --
package defaultchange

// Disjunct defines model for disjunct.
type Disjunct struct {
	Rootfield interface{} `json:"rootfield"`
}
-- out/generate/0.0/expandref.go --
package defaultchange

import (
	"encoding/json"
)

// Disjunct defines model for disjunct.
type Disjunct struct {
	Rootfield DisjunctRootfield `json:"rootfield"`
}

// DisjunctRootfield defines model for Disjunct.Rootfield.
type DisjunctRootfield struct {
	Branch    *interface{} `json:"branch,omitempty"`
	Branchone *string      `json:"branchone,omitempty"`
	Branchtwo *string      `json:"branchtwo,omitempty"`
	union     json.RawMessage
}
-- out/generate/0.1/group.go --
package defaultchange
-- out/generate/0.1/nil.go --
package disjunct

// Disjunct defines model for disjunct.
type Disjunct struct {
	Rootfield interface{} `json:"rootfield"`
}
-- out/generate/0.1/depointerized.go --
package defaultchange

// Disjunct defines model for disjunct.
type Disjunct struct {
	Rootfield interface{} `json:"rootfield"`
}
-- out/generate/0.1/godeclincomments.go --
package defaultchange

// Disjunct defines model for disjunct.
type Disjunct struct {
	Rootfield interface{} `json:"rootfield"`
}
-- out/generate/0.1/expandref.go --
package defaultchange

import (
	"encoding/json"
)

// Disjunct defines model for disjunct.
type Disjunct struct {
	Rootfield DisjunctRootfield `json:"rootfield"`
}

// DisjunctRootfield defines model for Disjunct.Rootfield.
type DisjunctRootfield struct {
	Branch      *interface{} `json:"branch,omitempty"`
	Branchone   *string      `json:"branchone,omitempty"`
	Branchthree *struct {
		Branchthreeinner *interface{} `json:"branchthreeinner,omitempty"`
	} `json:"branchthree,omitempty"`
	Branchtwo *string `json:"branchtwo,omitempty"`
	union     json.RawMessage
}
