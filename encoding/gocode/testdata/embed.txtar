-- in.cue --
package generate

import "github.com/grafana/thema"

thema.#Lineage
name: "basic"
seqs: [
    {
        schemas: [
            {
                EmbedRef
                foo: string
                someField: {
                    EmbedRef
                    run: int32
                    tell: bytes
                    dat: [...string]
                }
            }
        ]
    }
]

EmbedRef: {
    refField1: string
    refField2: 42
}

-- out/generate/0.0/group.go --
package basic

// Defines values for EmbedRefRefField2.
const (
	EmbedRefRefField2N42 EmbedRefRefField2 = 42
)

// Defines values for RefField2.
const (
	RefField2N42 RefField2 = 42
)

// EmbedRef defines model for EmbedRef.
type EmbedRef struct {
	RefField1 string            `json:"refField1"`
	RefField2 EmbedRefRefField2 `json:"refField2"`
}

// EmbedRefRefField2 defines model for EmbedRef.RefField2.
type EmbedRefRefField2 int

// Foo defines model for foo.
type Foo string

// RefField1 defines model for refField1.
type RefField1 string

// RefField2 defines model for refField2.
type RefField2 int

// SomeField defines model for someField.
type SomeField struct {
	// Embedded struct due to allOf(#/components/schemas/EmbedRef)
	EmbedRef `yaml:",inline"`
	Run  int32 `json:"run"`
	Tell []byte `json:"tell"`
	Dat []string `json:"dat"`
	// Embedded fields due to inline allOf schema
}
-- out/generate/0.0/nil.go --
package basic

// Defines values for EmbedRefRefField2.
const (
	EmbedRefRefField2N42 EmbedRefRefField2 = 42
)

// EmbedRef defines model for EmbedRef.
type EmbedRef struct {
	RefField1 string            `json:"refField1"`
	RefField2 EmbedRefRefField2 `json:"refField2"`
}

// EmbedRefRefField2 defines model for EmbedRef.RefField2.
type EmbedRefRefField2 int

// SomeField defines model for someField.
type SomeField struct {
	// Embedded struct due to allOf(#/components/schemas/EmbedRef)
	EmbedRef `yaml:",inline"`
	Run  int32 `json:"run"`
	Tell []byte `json:"tell"`
	Dat []string `json:"dat"`
	// Embedded fields due to inline allOf schema
}

// Basic defines model for basic.
type Basic struct {
	// Embedded struct due to allOf(#/components/schemas/EmbedRef)
	EmbedRef `yaml:",inline"`
	Foo string `json:"foo"`
	SomeField SomeField `json:"someField"`
	// Embedded fields due to inline allOf schema
}
