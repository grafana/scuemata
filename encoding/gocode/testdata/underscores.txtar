-- in.cue --
package generate

import "github.com/grafana/thema"

thema.#Lineage
name: "defaultchange"
seqs: [
        {
            schemas: [
                {
				    #AType: {
                        nestedType: #MultiNestedType
                        optionalNestedType?: #MultiNestedType
                        listNestedType?: [...#MultiNestedType]
                        doubleListNestedType?: [...[...#MultiNestedType]]
                        mapNestedType: [string]: #MultiNestedType
                        mapListNestedType: [string]: [...#MultiNestedType]
                        mapDoubleListNestedType: [string]: [...[...#MultiNestedType]]
                    }

                    #MultiNestedType: #SomeType | #SomeOtherType

                    #SomeType: {
                        astring: string
                    }

                    #SomeOtherType: {
                        abool: bool
                    }
				},
			]
		},
	]

-- out/generate/0.0/group.go --
package defaultchange

// AType defines model for AType.
type AType struct {
	DoubleListNestedType    [][]interface{}            `json:"doubleListNestedType,omitempty"`
	ListNestedType          []interface{}              `json:"listNestedType,omitempty"`
	MapDoubleListNestedType map[string][][]interface{} `json:"mapDoubleListNestedType"`
	MapListNestedType       map[string][]interface{}   `json:"mapListNestedType"`
	MapNestedType           map[string]interface{}     `json:"mapNestedType"`
	NestedType              interface{}                `json:"nestedType"`
	OptionalNestedType      *interface{}               `json:"optionalNestedType,omitempty"`
}

// SomeOtherType defines model for SomeOtherType.
type SomeOtherType struct {
	Abool bool `json:"abool"`
}

// SomeType defines model for SomeType.
type SomeType struct {
	Astring string `json:"astring"`
}
-- out/generate/0.0/nil.go --
package defaultchange

// AType defines model for AType.
type AType struct {
	DoubleListNestedType    [][]interface{}            `json:"doubleListNestedType,omitempty"`
	ListNestedType          []interface{}              `json:"listNestedType,omitempty"`
	MapDoubleListNestedType map[string][][]interface{} `json:"mapDoubleListNestedType"`
	MapListNestedType       map[string][]interface{}   `json:"mapListNestedType"`
	MapNestedType           map[string]interface{}     `json:"mapNestedType"`
	NestedType              interface{}                `json:"nestedType"`
	OptionalNestedType      *interface{}               `json:"optionalNestedType,omitempty"`
}

// SomeOtherType defines model for SomeOtherType.
type SomeOtherType struct {
	Abool bool `json:"abool"`
}

// SomeType defines model for SomeType.
type SomeType struct {
	Astring string `json:"astring"`
}

// Defaultchange defines model for defaultchange.
type Defaultchange = map[string]interface{}
-- out/generate/0.0/depointerized.go --
package defaultchange

// AType defines model for AType.
type AType struct {
	DoubleListNestedType    [][]interface{}            `json:"doubleListNestedType,omitempty"`
	ListNestedType          []interface{}              `json:"listNestedType,omitempty"`
	MapDoubleListNestedType map[string][][]interface{} `json:"mapDoubleListNestedType"`
	MapListNestedType       map[string][]interface{}   `json:"mapListNestedType"`
	MapNestedType           map[string]interface{}     `json:"mapNestedType"`
	NestedType              interface{}                `json:"nestedType"`
	OptionalNestedType      interface{}                `json:"optionalNestedType,omitempty"`
}

// SomeOtherType defines model for SomeOtherType.
type SomeOtherType struct {
	Abool bool `json:"abool"`
}

// SomeType defines model for SomeType.
type SomeType struct {
	Astring string `json:"astring"`
}

// Defaultchange defines model for defaultchange.
type Defaultchange = map[string]interface{}
-- out/generate/0.0/godeclincomments.go --
package defaultchange

// AType defines model for AType.
type AType struct {
	DoubleListNestedType    [][]interface{}            `json:"doubleListNestedType,omitempty"`
	ListNestedType          []interface{}              `json:"listNestedType,omitempty"`
	MapDoubleListNestedType map[string][][]interface{} `json:"mapDoubleListNestedType"`
	MapListNestedType       map[string][]interface{}   `json:"mapListNestedType"`
	MapNestedType           map[string]interface{}     `json:"mapNestedType"`
	NestedType              interface{}                `json:"nestedType"`
	OptionalNestedType      *interface{}               `json:"optionalNestedType,omitempty"`
}

// SomeOtherType defines model for SomeOtherType.
type SomeOtherType struct {
	Abool bool `json:"abool"`
}

// SomeType defines model for SomeType.
type SomeType struct {
	Astring string `json:"astring"`
}

// Defaultchange defines model for defaultchange.
type Defaultchange = map[string]interface{}
-- out/generate/0.0/expandref.go --
package defaultchange

import (
	"encoding/json"
)

// AType defines model for AType.
type AType struct {
	DoubleListNestedType    [][]ATypeDoubleListNestedTypeItem                 `json:"doubleListNestedType,omitempty"`
	ListNestedType          []ATypeListNestedTypeItem                         `json:"listNestedType,omitempty"`
	MapDoubleListNestedType map[string][][]ATypeMapDoubleListNestedTypeItem   `json:"mapDoubleListNestedType"`
	MapListNestedType       map[string][]ATypeMapListNestedTypeItem           `json:"mapListNestedType"`
	MapNestedType           map[string]ATypeMapNestedTypeAdditionalProperties `json:"mapNestedType"`
	NestedType              ATypeNestedType                                   `json:"nestedType"`
	OptionalNestedType      *ATypeOptionalNestedType                          `json:"optionalNestedType,omitempty"`
}

// ATypeDoubleListNestedTypeItem defines model for AType.doubleListNestedType.Item.
type ATypeDoubleListNestedTypeItem struct {
	Abool   *bool   `json:"abool,omitempty"`
	Astring *string `json:"astring,omitempty"`
	union   json.RawMessage
}

// ATypeListNestedTypeItem defines model for AType.listNestedType.Item.
type ATypeListNestedTypeItem struct {
	Abool   *bool   `json:"abool,omitempty"`
	Astring *string `json:"astring,omitempty"`
	union   json.RawMessage
}

// ATypeMapDoubleListNestedTypeItem defines model for AType.mapDoubleListNestedType.Item.
type ATypeMapDoubleListNestedTypeItem struct {
	Abool   *bool   `json:"abool,omitempty"`
	Astring *string `json:"astring,omitempty"`
	union   json.RawMessage
}

// ATypeMapListNestedTypeItem defines model for AType.mapListNestedType.Item.
type ATypeMapListNestedTypeItem struct {
	Abool   *bool   `json:"abool,omitempty"`
	Astring *string `json:"astring,omitempty"`
	union   json.RawMessage
}

// ATypeMapNestedTypeAdditionalProperties defines model for AType.mapNestedType.AdditionalProperties.
type ATypeMapNestedTypeAdditionalProperties struct {
	Abool   *bool   `json:"abool,omitempty"`
	Astring *string `json:"astring,omitempty"`
	union   json.RawMessage
}

// ATypeNestedType defines model for AType.NestedType.
type ATypeNestedType struct {
	Abool   *bool   `json:"abool,omitempty"`
	Astring *string `json:"astring,omitempty"`
	union   json.RawMessage
}

// ATypeOptionalNestedType defines model for AType.OptionalNestedType.
type ATypeOptionalNestedType struct {
	Abool   *bool   `json:"abool,omitempty"`
	Astring *string `json:"astring,omitempty"`
	union   json.RawMessage
}

// MultiNestedType defines model for MultiNestedType.
type MultiNestedType struct {
	Abool   *bool   `json:"abool,omitempty"`
	Astring *string `json:"astring,omitempty"`
	union   json.RawMessage
}

// SomeOtherType defines model for SomeOtherType.
type SomeOtherType struct {
	Abool bool `json:"abool"`
}

// SomeType defines model for SomeType.
type SomeType struct {
	Astring string `json:"astring"`
}

// Defaultchange defines model for defaultchange.
type Defaultchange = map[string]interface{}
