-- in.cue --
package generate

import "github.com/grafana/thema"

thema.#Lineage
name: "oneref"
schemas: [{
	version: [0, 0]
	schema: {
		aBaz: #Baz

		#Baz: {
			run:  string
			tell: bytes
			dat:  int32
		}
	}
}]
lenses: []
-- out/generate/0.0/expandrefs.json --
{
  "openapi": "3.0.0",
  "info": {
    "title": "oneref",
    "version": "0.0"
  },
  "paths": {},
  "components": {
    "schemas": {
      "Baz": {
        "type": "object",
        "required": [
          "run",
          "tell",
          "dat"
        ],
        "properties": {
          "run": {
            "type": "string"
          },
          "tell": {
            "type": "string",
            "format": "binary"
          },
          "dat": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "oneref": {
        "type": "object",
        "required": [
          "aBaz"
        ],
        "properties": {
          "aBaz": {
            "type": "object",
            "required": [
              "run",
              "tell",
              "dat"
            ],
            "properties": {
              "run": {
                "type": "string"
              },
              "tell": {
                "type": "string",
                "format": "binary"
              },
              "dat": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      }
    }
  }
}
-- out/generate/0.0/group.json --
{
  "openapi": "3.0.0",
  "info": {
    "title": "oneref",
    "version": "0.0"
  },
  "paths": {},
  "components": {
    "schemas": {
      "aBaz": {
        "type": "object",
        "required": [
          "run",
          "tell",
          "dat"
        ],
        "properties": {
          "run": {
            "type": "string"
          },
          "tell": {
            "type": "string",
            "format": "binary"
          },
          "dat": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Baz": {
        "type": "object",
        "required": [
          "run",
          "tell",
          "dat"
        ],
        "properties": {
          "run": {
            "type": "string"
          },
          "tell": {
            "type": "string",
            "format": "binary"
          },
          "dat": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    }
  }
}
-- out/generate/0.0/nil.json --
{
  "openapi": "3.0.0",
  "info": {
    "title": "oneref",
    "version": "0.0"
  },
  "paths": {},
  "components": {
    "schemas": {
      "Baz": {
        "type": "object",
        "required": [
          "run",
          "tell",
          "dat"
        ],
        "properties": {
          "run": {
            "type": "string"
          },
          "tell": {
            "type": "string",
            "format": "binary"
          },
          "dat": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "oneref": {
        "type": "object",
        "required": [
          "aBaz"
        ],
        "properties": {
          "aBaz": {
            "$ref": "#/components/schemas/Baz"
          }
        }
      }
    }
  }
}
-- out/generate/0.0/selfcontained.json --
{
  "openapi": "3.0.0",
  "info": {
    "title": "oneref",
    "version": "0.0"
  },
  "paths": {},
  "components": {
    "schemas": {
      "Baz": {
        "type": "object",
        "required": [
          "run",
          "tell",
          "dat"
        ],
        "properties": {
          "run": {
            "type": "string"
          },
          "tell": {
            "type": "string",
            "format": "binary"
          },
          "dat": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "oneref": {
        "type": "object",
        "required": [
          "aBaz"
        ],
        "properties": {
          "aBaz": {
            "$ref": "#/components/schemas/Baz"
          }
        }
      }
    }
  }
}
