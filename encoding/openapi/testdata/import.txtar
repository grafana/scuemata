-- in.cue --
package generate

import "github.com/grafana/thema"
import "thema.test/generate/subdir"

thema.#Lineage
name: "import"
seqs: [
    {
        schemas: [
            {
                subdir.Embedder

                foo: string
                bar?: int32
                baz: #Baz
                quark?: #AsRef

                someField: subdir.Aliasish

                #Baz: subdir.#DefFun
                #AsRef: subdir.Aliasish
            }
        ]
    }
]
-- subdir/importable.cue --
package subdir

Aliasish: {
    run: int32
    tell: bytes
    dat: [...string]
}

#DefFun: {
    fieldInDef: int32 | string
}

Embedder: {
    embedderField: bytes
}
-- out/generate/0.0/expandrefs.json/err --
#import.baz: unsupported op . for object type ({
	fieldInDef: int32 | string
}):
    ../../../../../../../thema.test/generate/in.cue:21:17
-- out/generate/0.0/group.json --
{
  "openapi": "3.0.0",
  "info": {
    "title": "import",
    "version": "0.0"
  },
  "path": {},
  "components": {
    "schemas": {
      "foo": {
        "type": "string"
      },
      "bar": {
        "type": "integer",
        "format": "int32"
      },
      "baz": {
        "type": "object",
        "required": [
          "fieldInDef"
        ],
        "properties": {
          "fieldInDef": {
            "oneOf": [
              {
                "type": "number",
                "minimum": -2147483648,
                "maximum": 2147483647
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "quark": {
        "type": "object",
        "required": [
          "run",
          "tell",
          "dat"
        ],
        "properties": {
          "run": {
            "type": "integer",
            "format": "int32"
          },
          "tell": {
            "type": "string",
            "format": "binary"
          },
          "dat": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "someField": {
        "type": "object",
        "required": [
          "run",
          "tell",
          "dat"
        ],
        "properties": {
          "run": {
            "type": "integer",
            "format": "int32"
          },
          "tell": {
            "type": "string",
            "format": "binary"
          },
          "dat": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Baz": {
        "type": "object",
        "required": [
          "fieldInDef"
        ],
        "properties": {
          "fieldInDef": {
            "oneOf": [
              {
                "type": "number",
                "minimum": -2147483648,
                "maximum": 2147483647
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "embedderField": {
        "type": "string",
        "format": "binary"
      },
      "AsRef": {
        "type": "object",
        "required": [
          "run",
          "tell",
          "dat"
        ],
        "properties": {
          "run": {
            "type": "integer",
            "format": "int32"
          },
          "tell": {
            "type": "string",
            "format": "binary"
          },
          "dat": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}
-- out/generate/0.0/nil.json --
{
  "openapi": "3.0.0",
  "info": {
    "title": "import",
    "version": "0.0"
  },
  "paths": {},
  "components": {
    "schemas": {
      "Aliasish": {
        "type": "object",
        "required": [
          "run",
          "tell",
          "dat"
        ],
        "properties": {
          "run": {
            "type": "integer",
            "format": "int32"
          },
          "tell": {
            "type": "string",
            "format": "binary"
          },
          "dat": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AsRef": {
        "$ref": "#/components/schemas/Aliasish"
      },
      "Baz": {
        "$ref": "#/components/schemas/DefFun"
      },
      "DefFun": {
        "type": "object",
        "required": [
          "fieldInDef"
        ],
        "properties": {
          "fieldInDef": {
            "oneOf": [
              {
                "type": "number",
                "minimum": -2147483648,
                "maximum": 2147483647
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "Embedder": {
        "type": "object",
        "required": [
          "embedderField"
        ],
        "properties": {
          "embedderField": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "import": {
        "type": "object",
        "properties": {
          "foo": {
            "type": "string"
          },
          "bar": {
            "type": "integer",
            "format": "int32"
          },
          "baz": {
            "$ref": "#/components/schemas/Baz"
          },
          "quark": {
            "$ref": "#/components/schemas/AsRef"
          },
          "someField": {
            "$ref": "#/components/schemas/Aliasish"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Embedder"
          },
          {
            "required": [
              "foo",
              "baz",
              "someField"
            ]
          }
        ]
      }
    }
  }
}
-- out/generate/0.0/selfcontained.json --
{
  "openapi": "3.0.0",
  "info": {
    "title": "import",
    "version": "0.0"
  },
  "paths": {},
  "components": {
    "schemas": {
      "Aliasish": {
        "type": "object",
        "required": [
          "run",
          "tell",
          "dat"
        ],
        "properties": {
          "run": {
            "type": "integer",
            "format": "int32"
          },
          "tell": {
            "type": "string",
            "format": "binary"
          },
          "dat": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AsRef": {
        "$ref": "#/components/schemas/Aliasish"
      },
      "Baz": {
        "$ref": "#/components/schemas/DefFun"
      },
      "DefFun": {
        "type": "object",
        "required": [
          "fieldInDef"
        ],
        "properties": {
          "fieldInDef": {
            "oneOf": [
              {
                "type": "number",
                "minimum": -2147483648,
                "maximum": 2147483647
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "Embedder": {
        "type": "object",
        "required": [
          "embedderField"
        ],
        "properties": {
          "embedderField": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "import": {
        "type": "object",
        "properties": {
          "foo": {
            "type": "string"
          },
          "bar": {
            "type": "integer",
            "format": "int32"
          },
          "baz": {
            "$ref": "#/components/schemas/Baz"
          },
          "quark": {
            "$ref": "#/components/schemas/AsRef"
          },
          "someField": {
            "$ref": "#/components/schemas/Aliasish"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Embedder"
          },
          {
            "required": [
              "foo",
              "baz",
              "someField"
            ]
          }
        ]
      }
    }
  }
}
-- out/generate/0.0/subpath.json --
{
  "openapi": "3.0.0",
  "info": {
    "title": "someField",
    "version": "0.0"
  },
  "paths": {},
  "components": {
    "schemas": {
      "someField": {
        "type": "object",
        "required": [
          "run",
          "tell",
          "dat"
        ],
        "properties": {
          "run": {
            "type": "integer",
            "format": "int32"
          },
          "tell": {
            "type": "string",
            "format": "binary"
          },
          "dat": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}
-- out/generate/0.0/subpathroot.json --
{
  "openapi": "3.0.0",
  "info": {
    "title": "overriddenName",
    "version": "0.0"
  },
  "paths": {},
  "components": {
    "schemas": {
      "overriddenName": {
        "type": "object",
        "required": [
          "run",
          "tell",
          "dat"
        ],
        "properties": {
          "run": {
            "type": "integer",
            "format": "int32"
          },
          "tell": {
            "type": "string",
            "format": "binary"
          },
          "dat": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}
